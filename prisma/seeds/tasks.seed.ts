import {CipherService} from "../../src/common/services/cipher.service";
import * as dotenv from "dotenv";

dotenv.config();

const encryptionService = new CipherService();
const tasksEncryptionStrength = parseInt(process.env.TASKS_ENCRYPTION_STRENGTH);

export default (userSecret: string) => [
    {
        todo_list_id: 1,
        name: encryptionService.cipherSymmetric("Rework UI components", userSecret, tasksEncryptionStrength),
        completed: true,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 1,
        name: encryptionService.cipherSymmetric("Rework todos components", userSecret, tasksEncryptionStrength),
        completed: false,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 1,
        name: encryptionService.cipherSymmetric("Rework todos UI", userSecret, tasksEncryptionStrength),
        completed: false,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 2,
        name: encryptionService.cipherSymmetric("Implement todo lists", userSecret, tasksEncryptionStrength),
        completed: false,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 2,
        name: encryptionService.cipherSymmetric("Rework todos", userSecret, tasksEncryptionStrength),
        completed: false,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 3,
        name: encryptionService.cipherSymmetric("Listen to Kool-Aid from Bring Me The Horizon", userSecret, tasksEncryptionStrength),
        completed: true,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 4,
        name: encryptionService.cipherSymmetric("Do the dishes", userSecret, tasksEncryptionStrength),
        completed: false,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 4,
        name: encryptionService.cipherSymmetric("Make some cleaning", userSecret, tasksEncryptionStrength),
        completed: false,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 4,
        name: encryptionService.cipherSymmetric("Feed the dog", userSecret, tasksEncryptionStrength),
        completed: false,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 5,
        name: encryptionService.cipherSymmetric("Test", userSecret, tasksEncryptionStrength),
        completed: false,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 5,
        name: encryptionService.cipherSymmetric("Test", userSecret, tasksEncryptionStrength),
        completed: false,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 5,
        name: encryptionService.cipherSymmetric("Test", userSecret, tasksEncryptionStrength),
        completed: false,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 5,
        name: encryptionService.cipherSymmetric("Test", userSecret, tasksEncryptionStrength),
        completed: false,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 5,
        name: encryptionService.cipherSymmetric("Test", userSecret, tasksEncryptionStrength),
        completed: false,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 5,
        name: encryptionService.cipherSymmetric("Test", userSecret, tasksEncryptionStrength),
        completed: true,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 5,
        name: encryptionService.cipherSymmetric("Test", userSecret, tasksEncryptionStrength),
        completed: false,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 5,
        name: encryptionService.cipherSymmetric("Test", userSecret, tasksEncryptionStrength),
        completed: false,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 5,
        name: encryptionService.cipherSymmetric("Test", userSecret, tasksEncryptionStrength),
        completed: true,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 5,
        name: encryptionService.cipherSymmetric("Test", userSecret, tasksEncryptionStrength),
        completed: false,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 5,
        name: encryptionService.cipherSymmetric("Test", userSecret, tasksEncryptionStrength),
        completed: false,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 5,
        name: encryptionService.cipherSymmetric("Test", userSecret, tasksEncryptionStrength),
        completed: true,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 5,
        name: encryptionService.cipherSymmetric("Test", userSecret, tasksEncryptionStrength),
        completed: true,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 5,
        name: encryptionService.cipherSymmetric("Test", userSecret, tasksEncryptionStrength),
        completed: false,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 5,
        name: encryptionService.cipherSymmetric("Test", userSecret, tasksEncryptionStrength),
        completed: true,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 5,
        name: encryptionService.cipherSymmetric("Test", userSecret, tasksEncryptionStrength),
        completed: false,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 5,
        name: encryptionService.cipherSymmetric("Test", userSecret, tasksEncryptionStrength),
        completed: true,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 5,
        name: encryptionService.cipherSymmetric("Test", userSecret, tasksEncryptionStrength),
        completed: false,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 5,
        name: encryptionService.cipherSymmetric("Test", userSecret, tasksEncryptionStrength),
        completed: false,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    },
    {
        todo_list_id: 5,
        name: encryptionService.cipherSymmetric("Test", userSecret, tasksEncryptionStrength),
        completed: false,
        deadline: new Date(),
        created_at: new Date(),
        updated_at: new Date(),
    }
];
